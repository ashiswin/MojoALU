
*** Running xst
    with args -ifn "mojo_top_0.xst" -ofn "mojo_top_0.srp" -intstyle ise

Reading design: mojo_top_0.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/shifter_10.v" into library work
Parsing module <shifter_10>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/compare_11.v" into library work
Parsing module <compare_11>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/boolean_9.v" into library work
Parsing module <boolean_9>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/adder_8.v" into library work
Parsing module <adder_8>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/seven_seg_6.v" into library work
Parsing module <seven_seg_6>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/decoder_7.v" into library work
Parsing module <decoder_7>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/counter_5.v" into library work
Parsing module <counter_5>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/alu_4.v" into library work
Parsing module <alu_4>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/testerFSM_2.v" into library work
Parsing module <testerFSM_2>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/reset_conditioner_1.v" into library work
Parsing module <reset_conditioner_1>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/multi_seven_seg_3.v" into library work
Parsing module <multi_seven_seg_3>.
Analyzing Verilog file "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/mojo_top_0.v" into library work
Parsing module <mojo_top_0>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <mojo_top_0>.

Elaborating module <reset_conditioner_1>.

Elaborating module <testerFSM_2>.

Elaborating module <alu_4>.

Elaborating module <adder_8>.

Elaborating module <boolean_9>.

Elaborating module <shifter_10>.

Elaborating module <compare_11>.

Elaborating module <multi_seven_seg_3>.

Elaborating module <counter_5>.

Elaborating module <seven_seg_6>.

Elaborating module <decoder_7>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top_0>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/mojo_top_0.v".
WARNING:Xst:647 - Input <cclk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_ss> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_mosi> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_sck> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_tx> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_rx_busy> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit tristate buffer for signal <spi_miso> created at line 67
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 67
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 67
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 67
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 67
    Found 1-bit tristate buffer for signal <avr_rx> created at line 67
    Summary:
	inferred   6 Tristate(s).
Unit <mojo_top_0> synthesized.

Synthesizing Unit <reset_conditioner_1>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/reset_conditioner_1.v".
    Found 4-bit register for signal <M_stage_q>.
    Summary:
	inferred   4 D-type flip-flop(s).
Unit <reset_conditioner_1> synthesized.

Synthesizing Unit <testerFSM_2>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/testerFSM_2.v".
WARNING:Xst:647 - Input <io_button<0:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <io_button<4:2>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <io_dip<7:6>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 6-bit register for signal <M_state_q>.
    Found 30-bit register for signal <M_counter_q>.
    Found finite state machine <FSM_0> for signal <M_state_q>.
    -----------------------------------------------------------------------
    | States             | 48                                             |
    | Transitions        | 127                                            |
    | Inputs             | 20                                             |
    | Outputs            | 35                                             |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 000000                                         |
    | Power Up State     | 000000                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 30-bit adder for signal <M_counter_q[29]_GND_3_o_add_288_OUT> created at line 711.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  30 D-type flip-flop(s).
	inferred  89 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <testerFSM_2> synthesized.

Synthesizing Unit <alu_4>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/alu_4.v".
    Found 8-bit 4-to-1 multiplexer for signal <out> created at line 66.
    Summary:
	inferred   4 Multiplexer(s).
Unit <alu_4> synthesized.

Synthesizing Unit <adder_8>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/adder_8.v".
    Found 8-bit subtractor for signal <n0261> created at line 66.
    Found 8-bit subtractor for signal <op1[7]_unary_minus_5_OUT> created at line 81.
    Found 4-bit subtractor for signal <op2[7]_op1[7]_sub_13_OUT> created at line 94.
    Found 4-bit subtractor for signal <PWR_5_o_GND_5_o_sub_28_OUT> created at line 126.
    Found 4-bit subtractor for signal <GND_5_o_PWR_5_o_sub_30_OUT> created at line 128.
    Found 4-bit subtractor for signal <op1[7]_GND_5_o_sub_37_OUT> created at line 144.
    Found 4-bit subtractor for signal <GND_5_o_op1[7]_sub_39_OUT> created at line 146.
    Found 4-bit subtractor for signal <op1[6]_GND_5_o_sub_44_OUT> created at line 153.
    Found 4-bit subtractor for signal <op1[6]_GND_5_o_sub_47_OUT> created at line 158.
    Found 4-bit subtractor for signal <GND_5_o_op1[6]_sub_49_OUT> created at line 160.
    Found 8-bit subtractor for signal <fmulres[7]_unary_minus_54_OUT> created at line 164.
    Found 8-bit adder for signal <op1[7]_op2[7]_add_0_OUT> created at line 55.
    Found 5-bit adder for signal <n0237> created at line 100.
    Found 4-bit adder for signal <op2[7]_GND_5_o_add_16_OUT> created at line 102.
    Found 4-bit adder for signal <op1[7]_GND_5_o_add_42_OUT> created at line 149.
    Found 4-bit adder for signal <_n0319> created at line 124.
    Found 4-bit adder for signal <_n0320> created at line 124.
    Found 4-bit adder for signal <op1[6]_GND_5_o_add_25_OUT> created at line 124.
    Found 8-bit subtractor for signal <op1[7]_op2[7]_add_2_OUT> created at line 67.
    Found 8x8-bit multiplier for signal <n0189> created at line 78.
    Found 4-bit shifter logical right for signal <PWR_5_o_op2[7]_shift_right_13_OUT> created at line 99
    Found 4x4-bit multiplier for signal <PWR_5_o_PWR_5_o_MuLt_21_OUT> created at line 116.
    Found 8-bit shifter logical right for signal <PWR_5_o_PWR_5_o_shift_right_28_OUT> created at line 126
    Found 8-bit shifter logical left for signal <PWR_5_o_GND_5_o_shift_left_30_OUT> created at line 128
    Found 8-bit shifter logical right for signal <op1[7]_op1[7]_shift_right_37_OUT> created at line 144
    Found 8-bit shifter logical left for signal <op1[7]_GND_5_o_shift_left_39_OUT> created at line 146
    Found 8-bit shifter logical left for signal <GND_5_o_op1[6]_shift_left_47_OUT> created at line 158
    Found 8-bit shifter logical right for signal <GND_5_o_GND_5_o_shift_right_49_OUT> created at line 160
    Found 8-bit 12-to-1 multiplexer for signal <_n0439> created at line 11.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <fmulres<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 4-bit comparator greater for signal <op2[6]_op1[6]_LessThan_10_o> created at line 87
    Found 4-bit comparator greater for signal <GND_5_o_PWR_5_o_LessThan_27_o> created at line 125
    Found 4-bit comparator greater for signal <GND_5_o_op1[7]_LessThan_36_o> created at line 143
    Found 4-bit comparator greater for signal <GND_5_o_op1[6]_LessThan_45_o> created at line 156
    Found 4-bit comparator greater for signal <GND_5_o_op1[6]_LessThan_46_o> created at line 157
    Summary:
	inferred   2 Multiplier(s).
	inferred  19 Adder/Subtractor(s).
	inferred   8 Latch(s).
	inferred   5 Comparator(s).
	inferred  45 Multiplexer(s).
	inferred   7 Combinational logic shifter(s).
Unit <adder_8> synthesized.

Synthesizing Unit <boolean_9>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/boolean_9.v".
    Summary:
Unit <boolean_9> synthesized.

Synthesizing Unit <shifter_10>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/shifter_10.v".
    Found 8-bit shifter logical left for signal <op1[7]_op2[4]_shift_left_0_OUT> created at line 21
    Found 8-bit shifter logical right for signal <op1[7]_op2[4]_shift_right_1_OUT> created at line 24
    Found 8-bit shifter arithmetic right for signal <op1[7]_op2[4]_shift_right_2_OUT> created at line 27
    Found 8-bit 3-to-1 multiplexer for signal <out> created at line 11.
    Summary:
	inferred   4 Multiplexer(s).
	inferred   3 Combinational logic shifter(s).
Unit <shifter_10> synthesized.

Synthesizing Unit <compare_11>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/compare_11.v".
    Summary:
	inferred   1 Multiplexer(s).
Unit <compare_11> synthesized.

Synthesizing Unit <multi_seven_seg_3>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/multi_seven_seg_3.v".
    Found 5-bit adder for signal <M_ctr_value[1]_GND_37_o_add_1_OUT> created at line 48.
    Found 2x3-bit multiplier for signal <n0020> created at line 48.
    Found 55-bit shifter logical right for signal <n0012> created at line 48
    Summary:
	inferred   1 Multiplier(s).
	inferred   1 Adder/Subtractor(s).
	inferred   1 Combinational logic shifter(s).
Unit <multi_seven_seg_3> synthesized.

Synthesizing Unit <counter_5>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/counter_5.v".
    Found 18-bit register for signal <M_ctr_q>.
    Found 18-bit adder for signal <M_ctr_q[17]_GND_38_o_add_0_OUT> created at line 35.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  18 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <counter_5> synthesized.

Synthesizing Unit <seven_seg_6>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/seven_seg_6.v".
    Summary:
	no macro.
Unit <seven_seg_6> synthesized.

Synthesizing Unit <decoder_7>.
    Related source file is "C:/Users/ashis/Documents/mojo/ALU/work/planAhead/ALU/ALU.srcs/sources_1/imports/verilog/decoder_7.v".
    Summary:
	no macro.
Unit <decoder_7> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 3
 3x2-bit multiplier                                    : 1
 4x4-bit multiplier                                    : 1
 8x8-bit multiplier                                    : 1
# Adders/Subtractors                                   : 22
 18-bit adder                                          : 1
 30-bit adder                                          : 1
 4-bit adder                                           : 5
 4-bit subtractor                                      : 8
 5-bit adder                                           : 2
 8-bit adder                                           : 1
 8-bit subtractor                                      : 4
# Registers                                            : 3
 18-bit register                                       : 1
 30-bit register                                       : 1
 4-bit register                                        : 1
# Latches                                              : 8
 1-bit latch                                           : 8
# Comparators                                          : 5
 4-bit comparator greater                              : 5
# Multiplexers                                         : 144
 1-bit 2-to-1 multiplexer                              : 29
 18-bit 2-to-1 multiplexer                             : 1
 30-bit 2-to-1 multiplexer                             : 61
 4-bit 2-to-1 multiplexer                              : 1
 5-bit 2-to-1 multiplexer                              : 1
 6-bit 2-to-1 multiplexer                              : 15
 8-bit 12-to-1 multiplexer                             : 1
 8-bit 2-to-1 multiplexer                              : 33
 8-bit 3-to-1 multiplexer                              : 1
 8-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 11
 4-bit shifter logical right                           : 1
 55-bit shifter logical right                          : 1
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 4
 8-bit shifter logical right                           : 4
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 1
# Xors                                                 : 3
 1-bit xor2                                            : 1
 8-bit xor2                                            : 2

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <counter_5>.
The following registers are absorbed into counter <M_ctr_q>: 1 register on signal <M_ctr_q>.
Unit <counter_5> synthesized (advanced).

Synthesizing (advanced) Unit <multi_seven_seg_3>.
	Multiplier <Mmult_n0020> in block <multi_seven_seg_3> and adder/subtractor <Madd_M_ctr_value[1]_GND_37_o_add_1_OUT> in block <multi_seven_seg_3> are combined into a MAC<Maddsub_n0020>.
Unit <multi_seven_seg_3> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# MACs                                                 : 1
 3x2-to-5-bit MAC                                      : 1
# Multipliers                                          : 2
 4x4-bit multiplier                                    : 1
 8x8-bit multiplier                                    : 1
# Adders/Subtractors                                   : 20
 30-bit adder                                          : 1
 4-bit adder                                           : 5
 4-bit subtractor                                      : 8
 5-bit adder                                           : 1
 8-bit adder                                           : 1
 8-bit subtractor                                      : 4
# Counters                                             : 1
 18-bit up counter                                     : 1
# Registers                                            : 34
 Flip-Flops                                            : 34
# Comparators                                          : 5
 4-bit comparator greater                              : 5
# Multiplexers                                         : 143
 1-bit 2-to-1 multiplexer                              : 29
 30-bit 2-to-1 multiplexer                             : 61
 4-bit 2-to-1 multiplexer                              : 1
 5-bit 2-to-1 multiplexer                              : 1
 6-bit 2-to-1 multiplexer                              : 15
 8-bit 12-to-1 multiplexer                             : 1
 8-bit 2-to-1 multiplexer                              : 33
 8-bit 3-to-1 multiplexer                              : 1
 8-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 11
 4-bit shifter logical right                           : 1
 55-bit shifter logical right                          : 1
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 4
 8-bit shifter logical right                           : 4
# FSMs                                                 : 1
# Xors                                                 : 3
 1-bit xor2                                            : 1
 8-bit xor2                                            : 2

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <test/FSM_0> on signal <M_state_q[1:48]> with one-hot encoding.
------------------------------------------------------------
 State  | Encoding
------------------------------------------------------------
 000000 | 000000000000000000000000000000000000000000000001
 000001 | 000000000000000000000000000000000000000000000010
 001001 | 000000000000000000000000000000000000000000000100
 000010 | 000000000000000000000000000000000000000000001000
 000011 | 000000000000000000000000000000000000000000010000
 000100 | 000000000000000000000000000000000000000000100000
 000101 | 000000000000000000000000000000000000000001000000
 001010 | 000000000000000000000000000000000000000010000000
 000110 | 000000000000000000000000000000000000000100000000
 000111 | 000000000000000000000000000000000000001000000000
 001000 | 000000000000000000000000000000000000010000000000
 001011 | 000000000000000000000000000000000000100000000000
 001110 | 000000000000000000000000000000000001000000000000
 001100 | 000000000000000000000000000000000010000000000000
 001101 | 000000000000000000000000000000000100000000000000
 001111 | 000000000000000000000000000000001000000000000000
 010001 | 000000000000000000000000000000010000000000000000
 010000 | 000000000000000000000000000000100000000000000000
 010010 | 000000000000000000000000000001000000000000000000
 010100 | 000000000000000000000000000010000000000000000000
 010011 | 000000000000000000000000000100000000000000000000
 010101 | 000000000000000000000000001000000000000000000000
 010110 | 000000000000000000000000010000000000000000000000
 011101 | 000000000000000000000000100000000000000000000000
 011010 | 000000000000000000000001000000000000000000000000
 011000 | 000000000000000000000010000000000000000000000000
 011011 | 000000000000000000000100000000000000000000000000
 011001 | 000000000000000000001000000000000000000000000000
 011100 | 000000000000000000010000000000000000000000000000
 101010 | 000000000000000000100000000000000000000000000000
 011110 | 000000000000000001000000000000000000000000000000
 011111 | 000000000000000010000000000000000000000000000000
 100101 | 000000000000000100000000000000000000000000000000
 100010 | 000000000000001000000000000000000000000000000000
 100110 | 000000000000010000000000000000000000000000000000
 100011 | 000000000000100000000000000000000000000000000000
 100111 | 000000000001000000000000000000000000000000000000
 100100 | 000000000010000000000000000000000000000000000000
 100000 | 000000000100000000000000000000000000000000000000
 100001 | 000000001000000000000000000000000000000000000000
 010111 | 000000010000000000000000000000000000000000000000
 101101 | 000000100000000000000000000000000000000000000000
 101011 | 000001000000000000000000000000000000000000000000
 101100 | 000010000000000000000000000000000000000000000000
 101110 | 000100000000000000000000000000000000000000000000
 101111 | 001000000000000000000000000000000000000000000000
 110000 | 010000000000000000000000000000000000000000000000
 110010 | 100000000000000000000000000000000000000000000000
------------------------------------------------------------
WARNING:Xst:2677 - Node <M_counter_q_27> of sequential type is unconnected in block <testerFSM_2>.
WARNING:Xst:2677 - Node <M_counter_q_28> of sequential type is unconnected in block <testerFSM_2>.
WARNING:Xst:2677 - Node <M_counter_q_29> of sequential type is unconnected in block <testerFSM_2>.

Optimizing unit <mojo_top_0> ...

Optimizing unit <testerFSM_2> ...

Optimizing unit <alu_4> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block mojo_top_0, actual ratio is 16.
FlipFlop test/M_state_q_FSM_FFd1 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd19 has been replicated 1 time(s)
FlipFlop test/M_state_q_FSM_FFd2 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd28 has been replicated 2 time(s)
FlipFlop test/M_state_q_FSM_FFd30 has been replicated 2 time(s)
FlipFlop test/M_state_q_FSM_FFd31 has been replicated 1 time(s)
FlipFlop test/M_state_q_FSM_FFd32 has been replicated 2 time(s)
FlipFlop test/M_state_q_FSM_FFd33 has been replicated 2 time(s)
FlipFlop test/M_state_q_FSM_FFd43 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd44 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd48 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd5 has been replicated 3 time(s)
FlipFlop test/M_state_q_FSM_FFd9 has been replicated 1 time(s)

Final Macro Processing ...

Processing Unit <mojo_top_0> :
INFO:Xst:741 - HDL ADVISOR - A 4-bit shift register was found for signal <reset_cond/M_stage_q_3> and currently occupies 4 logic cells (2 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <mojo_top_0> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 126
 Flip-Flops                                            : 126

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
---------------------------------------------------------------------------------------------------+----------------------------------+-------+
Clock Signal                                                                                       | Clock buffer(FF name)            | Load  |
---------------------------------------------------------------------------------------------------+----------------------------------+-------+
clk                                                                                                | BUFGP                            | 126   |
test/alu/adder/alufn[5]_GND_20_o_Select_93_o(test/alu/adder/Mmux_alufn[5]_GND_20_o_Select_93_o13:O)| NONE(*)(test/alu/adder/fmulres_7)| 8     |
---------------------------------------------------------------------------------------------------+----------------------------------+-------+
(*) This 1 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 16.396ns (Maximum Frequency: 60.990MHz)
   Minimum input arrival time before clock: 17.400ns
   Maximum output required time after clock: 16.994ns
   Maximum combinational path delay: 17.221ns

=========================================================================
